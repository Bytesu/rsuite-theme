/*! Last update: Sun Aug 14 2016 11:00:52 GMT+0800 (CST) */
webpackJsonp([12],{384:function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var d=n(3),l=a(d),r=n(254),i=n(338),s=a(i),c=n(335),o={basic:'const PaginationBasic = React.createClass({\n    getInitialState() {\n        return {\n            activePage: 5\n        };\n    },\n\n    handleSelect(eventKey) {\n        this.setState({\n            activePage: eventKey\n        });\n    },\n\n    render() {\n        return (\n            <div>\n                <Pagination\n                    size="lg"\n                    pages={10}\n                    activePage={this.state.activePage}\n                    onSelect={this.handleSelect} />\n\n                <br/>\n                <Pagination\n                    size="md"\n                    pages={10}\n                    activePage={this.state.activePage}\n                    onSelect={this.handleSelect} />\n\n                <br/>\n                <Pagination\n                    size="sm"\n                    pages={10}\n                    activePage={this.state.activePage}\n                    onSelect={this.handleSelect} />\n            </div>\n        );\n    }\n});\n\n\nReactDOM.render(<PaginationBasic />, mountNode);\n',advanced:"const PaginationAdvanced = React.createClass({\n    getInitialState() {\n        return {\n            activePage: 1\n        };\n    },\n    handleSelect(eventKey) {\n        this.setState({\n            activePage: eventKey\n        });\n    },\n\n    render() {\n        return (\n            <Pagination\n                prev\n                next\n                first\n                last\n                ellipsis\n                boundaryLinks\n                pages={30}\n                maxButtons={5}\n                activePage={this.state.activePage}\n                onSelect={this.handleSelect} />\n        );\n    }\n});\n\nReactDOM.render(<PaginationAdvanced />, mountNode);\n"};e["default"]=l["default"].createClass({displayName:"pagination",render:function(){return l["default"].createElement(r.Col,{md:9,sm:12},l["default"].createElement("h1",{className:"page-header"},"Pagination",l["default"].createElement("span",{className:"page-header-en"},l["default"].createElement("code",null,"Pagination"))),l["default"].createElement("h3",null,"默认样式"),l["default"].createElement(s["default"],{code:o.basic}),l["default"].createElement("h3",null,"更多配置"),l["default"].createElement(s["default"],{code:o.advanced}),l["default"].createElement("h3",null,"组件属性"),l["default"].createElement(c.Markdown,null,n(385)))}})},385:function(t,e){t.exports="<table> <thead> <tr> <th>属性名称</th> <th>类型</th> <th>默认值</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>activePage</td> <td>number</td> <td>1</td> <td>当前页码</td> </tr> <tr> <td>pages</td> <td>number</td> <td>1</td> <td>页数</td> </tr> <tr> <td>maxButtons</td> <td>number</td> <td></td> <td>分页按钮最多显示数</td> </tr> <tr> <td>first</td> <td>boolean</td> <td>false</td> <td>显示第一页</td> </tr> <tr> <td>last</td> <td>boolean</td> <td>false</td> <td>显示最后一页</td> </tr> <tr> <td>prev</td> <td>boolean</td> <td>false</td> <td>显示上一页</td> </tr> <tr> <td>next</td> <td>boolean</td> <td>false</td> <td>显示下一页</td> </tr> <tr> <td>ellipsis</td> <td>boolean</td> <td>false</td> <td>显示省略符</td> </tr> <tr> <td>boundaryLinks</td> <td>boolean</td> <td>false</td> <td>显示边界分页按钮 1 和 pages</td> </tr> <tr> <td>buttonComponentClass</td> <td>elementType</td> <td>Anchor</td> <td></td> </tr> <tr> <td>classPrefix</td> <td>string</td> <td><code>pagination</code></td> <td></td> </tr> </tbody> </table>"}});